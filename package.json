{
    "name": "nuke-tools",
    "displayName": "Nuke Tools",
    "publisher": "virgilsisoe",
    "description": "A set of tools related to Nuke that simplify the process of writing code for it.",
    "version": "0.14.1",
    "repository": {
        "type": "git",
        "url": "https://github.com/sisoe24/Nuke-Tools"
    },
    "icon": "resources/images/nuke_icon.png",
    "engines": {
        "vscode": "^1.58.0"
    },
    "activationEvents": [
        "onStartupFinished",
        "onView:nuke-tools"
    ],
    "categories": [
        "Other",
        "Programming Languages"
    ],
    "contributes": {
        "commands": [
            {
                "command": "nuke-tools.refreshNodes",
                "icon": "$(extensions-refresh)",
                "title": "Refresh Viewer"
            },
            {
                "command": "nuke-tools.syncNodes",
                "title": "Sync Nodes"
            },
            {
                "command": "nuke-tools.addKnob",
                "title": "Add Python Knob",
                "icon": "$(add)"
            },
            {
                "command": "nuke-tools.syncKnob",
                "title": "Send code to Knob",
                "icon": "$(sync)"
            },
            {
                "command": "nuke-tools.deleteEntry",
                "title": "Delete"
            },
            {
                "category": "Nuke",
                "command": "nuke-tools.launchNuke",
                "shortTitle": "Nuke",
                "title": "Launch main executable"
            },
            {
                "category": "Nuke",
                "command": "nuke-tools.launchNukeOptArgs",
                "shortTitle": "Launch Nuke",
                "title": "Launch main executable with prompt"
            },
            {
                "category": "Nuke",
                "command": "nuke-tools.addPackages",
                "shortTitle": "Add Packages",
                "title": "Add Packages"
            },
            {
                "category": "Nuke",
                "command": "nuke-tools.extras",
                "shortTitle": "Extras",
                "title": "Extras"
            },
            {
                "category": "Nuke",
                "command": "nuke-tools.openNukeScript",
                "shortTitle": "Open Script in Nuke",
                "title": "Open Script in Nuke"
            },
            {
                "category": "Nuke",
                "command": "nuke-tools.showExecutables",
                "shortTitle": "Show Executables",
                "title": "Show Executables"
            },
            {
                "category": "Nuke",
                "command": "nuke-tools.runCodeInsideNuke",
                "enablement": "resourceLangId =~ /python|cpp/ || resourceExtname == .blink || resourceScheme == untitled",
                "icon": {
                    "dark": "resources/icons/dark/run_code.svg",
                    "light": "resources/icons/light/run_code.svg"
                },
                "title": "Run Code Inside Nuke"
            }
        ],
        "configuration": [
            {
                "properties": {
                    "nukeTools.network.debug": {
                        "default": false,
                        "markdownDescription": "Show debugging information the in output window.",
                        "type": "boolean"
                    },
                    "nukeTools.network.manualConnection": {
                        "markdownDescription": "Specify the host and port manually. If active is set to false, the extension will try to connect to the default host and port.",
                        "type": "object",
                        "default": {
                            "active": false,
                            "host": "localhost",
                            "port": "49512"
                        }
                    },
                    "nukeTools.nukeExecutable.primaryExecutablePath": {
                        "description": "Path to Nuke executable file.",
                        "type": "string"
                    },
                    "nukeTools.nukeExecutable.commandLineArguments": {
                        "markdownDescription": "Command line arguments to be added when launching `#nukeTools.nukeExecutable.primaryExecutablePath#`. [Nuke documentation](https://learn.foundry.com/nuke/content/comp_environment/configuring_nuke/command_line_operations.html). (e.g. `--nukex`)",
                        "type": "string"
                    },
                    "nukeTools.nukeExecutable.executables": {
                        "description": "A list of executables to register as commands.",
                        "type": "object",
                        "examples": [
                            {
                                "Nuke": {
                                    "bin": "/usr/local/Nuke15.0v4/Nuke15.0",
                                    "args": ""
                                },
                                "NukeX": {
                                    "bin": "/usr/local/Nuke15.0v4/Nuke15.0",
                                    "args": "--nukex"
                                }
                            }
                        ]
                    },
                    "nukeTools.nukeExecutable.restartInstance": {
                        "default": false,
                        "markdownDescription": "Restart the terminal instance instead of creating new ones. Note: This will force close the terminal instance.",
                        "type": "boolean"
                    },
                    "nukeTools.nukeExecutable.envVars": {
                        "description": "A list of environment variable to be added before launching Nuke from NukeTools.",
                        "type": "object",
                        "examples": [
                            {
                                "NUKE_PATH": "${workspaceFolder}/gizmos:$NUKE_PATH"
                            }
                        ]
                    },
                    "nukeTools.other.clearPreviousOutput": {
                        "default": false,
                        "description": "Clear previous console output before next execution.",
                        "type": "boolean"
                    }
                },
                "title": "Nuke Tools"
            }
        ],
        "grammars": [
            {
                "language": "blinkscript",
                "path": "./language/blinkscript.tmLanguage.json",
                "scopeName": "source.blink"
            },
            {
                "language": "nuke",
                "path": "./language/nuke.tmLanguage.json",
                "scopeName": "source.nk"
            }
        ],
        "languages": [
            {
                "aliases": [
                    "BlinkScript",
                    "blinkscript"
                ],
                "configuration": "./language/language-configuration.json",
                "extensions": [
                    ".blink"
                ],
                "id": "blinkscript"
            },
            {
                "aliases": [
                    "nuke"
                ],
                "extensions": [
                    ".nk",
                    ".gizmo"
                ],
                "id": "nuke"
            }
        ],
        "menus": {
            "editor/title": [
                {
                    "command": "nuke-tools.runCodeInsideNuke",
                    "group": "navigation",
                    "when": "resourceLangId =~ /python|cpp/ || resourceExtname == .blink || resourceScheme == untitled"
                }
            ],
            "view/item/context": [
                {
                    "command": "nuke-tools.addKnob",
                    "when": "view == nuke-tools && viewItem == node",
                    "group": "inline"
                },
                {
                    "command": "nuke-tools.syncKnob",
                    "when": "view == nuke-tools && viewItem == knob",
                    "group": "inline"
                }
            ],
            "view/title": [
                {
                    "command": "nuke-tools.refreshNodes",
                    "group": "navigation",
                    "when": "view == nuke-tools"
                },
                {
                    "command": "nuke-tools.syncNodes",
                    "when": "view == nuke-tools"
                }
            ]
        },
        "views": {
            "nodes-inspector": [
                {
                    "contextualTitle": "Nuke Tools",
                    "icon": "resources/icons/nuke.svg",
                    "id": "nuke-tools",
                    "name": "Nodes Panel"
                }
            ]
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "icon": "resources/icons/nuke.svg",
                    "id": "nodes-inspector",
                    "title": "Nuke Tools"
                }
            ]
        },
        "viewsWelcome": [
            {
                "contents": "Nodes Panel is currently in beta. Some features may not work as expected.\nPlease connect nukeserversocket and refresh. [Learn more](https://github.com/sisoe24/nukeserversocket#141-execute-code).\n[Refresh](command:nuke-tools.refreshNodes)",
                "view": "nuke-tools"
            }
        ]
    },
    "dependencies": {
        "@terascope/fetch-github-release": "^0.8.7",
        "extract-zip": "^2.0.1"
    },
    "devDependencies": {
        "@types/glob": "^7.1.3",
        "@types/mocha": "^8.2.2",
        "@types/node": "14.x",
        "@types/uuid": "^9.0.1",
        "@types/vscode": "^1.58.0",
        "@typescript-eslint/eslint-plugin": "^4.26.0",
        "@typescript-eslint/parser": "^4.26.0",
        "esbuild": "^0.12.29",
        "eslint": "^7.32.0",
        "glob": "^7.1.7",
        "mocha": "^10.2.0",
        "source-map-support": "^0.5.20",
        "ts-node": "^10.4.0",
        "typescript": "^4.3.2",
        "vscode-test": "^1.5.2"
    },
    "keywords": [
        "nuke",
        "python",
        "thefoundry",
        "foundry",
        "blinkscript",
        "blink",
        "stubs",
        "gizmo",
        "pyside"
    ],
    "license": "MIT",
    "main": "./out/main.js",
    "scripts": {
        "compile": "tsc -p ./",
        "esbuild": "npm run esbuild-base -- --sourcemap",
        "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --external:keyv --format=cjs --platform=node --log-level=debug",
        "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
        "test-compile": "tsc -p ./",
        "vscode:prepublish": "npm run esbuild-base -- --minify",
        "lint": "eslint src --ext ts",
        "pretest": "npm run compile && npm run lint",
        "test": "node ./out/test/runTest.js",
        "watch": "tsc -watch -p ./"
    }
}
