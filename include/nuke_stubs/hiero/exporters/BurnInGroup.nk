Group {
 name HieroBurnIns
 selected true
 addUserKnob {20 burnIn_tab l "Burn-In Controls"}
 addUserKnob {7 burnIn_textSize l "Text Size" R 10 100}
 burnIn_textSize burnIn_textSize_value
 addUserKnob {18 burnIn_colour l Colour}
 burnIn_colour {1 1 1}
 addUserKnob {3 burnIn_padding l Padding}
 burnIn_padding burnIn_padding_value
 addUserKnob {2 burnIn_font l Font}
 burnIn_font burnIn_font_value
 addUserKnob {26 ""}
 addUserKnob {1 burnIn_topLeft l "Top Left"}
 burnIn_topLeft burnIn_topLeft_value
 addUserKnob {1 burnIn_topMiddle l "Top Middle"}
 burnIn_topMiddle burnIn_topMiddle_value
 addUserKnob {1 burnIn_topRight l "Top Right"}
 burnIn_topRight burnIn_topRight_value 
 addUserKnob {1 burnIn_bottomLeft l "Bottom Left"}
 burnIn_bottomLeft burnIn_bottomLeft_value
 addUserKnob {1 burnIn_bottomMiddle l "Bottom Middle"}
 burnIn_bottomMiddle burnIn_bottomMiddle_value
 addUserKnob {1 burnIn_bottomRight l "Bottom Right"}
 burnIn_bottomRight burnIn_bottomRight_value
}
 Input {
  inputs 0
  name Input1
  xpos -179
  ypos 63
 }
 Dot {
  name Dot2
  xpos -144
  ypos 122
 }
 Text {
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  opacity {{"\[python -execlocal s\\ =\\ \\\"23\\\"\\nif\\ s\\ ==\\ \\\"23\\\":\\n\\ \\ ret\\ =\\ 1\\nelse:\\n\\ \\ ret\\ =\\ 0]"}}
  message "\[value parent.burnIn_topLeft]\n"
  font "\[python \{nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value() if os.path.exists(nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value()) else nuke.defaultFontPathname()\}]"
  size {{parent.burnIn_textSize}}
  yjustify top
  Transform 1
  box {{parent.burnIn_padding} {parent.burnIn_padding} {width-parent.burnIn_padding} {"height - parent.burnIn_padding"}}
  center {960 540}
  color {{parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour}}
  name Text_TopLeft
  selected true
  xpos -178
  ypos 180
 }
 Text {
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  message "\[value parent.burnIn_topMiddle]"
  font "\[python \{nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value() if os.path.exists(nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value()) else nuke.defaultFontPathname()\}]"
  size {{parent.burnIn_textSize}}
  xjustify center
  yjustify top
  Transform 1
  box {{parent.burnIn_padding} {parent.burnIn_padding} {width-parent.burnIn_padding} {"height - parent.burnIn_padding"}}
  center {960 540}
  color {{parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour}}
  name Text_TopMiddle
  xpos -178
  ypos 204
 }
 Text {
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  message "\[value parent.burnIn_topRight]\n"
  font "\[python \{nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value() if os.path.exists(nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value()) else nuke.defaultFontPathname()\}]"
  size {{parent.burnIn_textSize}}
  xjustify right
  yjustify top
  Transform 1
  box {{parent.burnIn_padding} {parent.burnIn_padding} {width-parent.burnIn_padding} {"height - parent.burnIn_padding"}}
  center {960 540}
  color {{parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour}}
  name Text_TopRight
  xpos -178
  ypos 228
 }
 Text {
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  message "\[value parent.burnIn_bottomLeft]"
  font "\[python \{nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value() if os.path.exists(nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value()) else nuke.defaultFontPathname()\}]"
  size {{parent.burnIn_textSize}}
  yjustify bottom
  Transform 1
  box {{parent.burnIn_padding} {parent.burnIn_padding} {width-parent.burnIn_padding} {"height - parent.burnIn_padding"}}
  center {960 540}
  color {{parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour}}
  name Text_BottomLeft
  xpos -178
  ypos 252
 }
 Text {
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  message "\[value parent.burnIn_bottomMiddle]"
  font "\[python \{nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value() if os.path.exists(nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value()) else nuke.defaultFontPathname()\}]"
  size {{parent.burnIn_textSize}}
  xjustify center
  yjustify bottom
  Transform 1
  box {{parent.burnIn_padding} {parent.burnIn_padding} {width-parent.burnIn_padding} {"height - parent.burnIn_padding"}}
  center {960 540}
  color {{parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour}}
  name Text_BottomMiddle
  xpos -178
  ypos 276
 }
 Text {
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  message "\[value parent.burnIn_bottomRight]"
  font "\[python \{nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value() if os.path.exists(nuke.toNode(nuke.thisNode().fullName().split('.')\[0])\['burnIn_font'].value()) else nuke.defaultFontPathname()\}]"
  size {{parent.burnIn_textSize}}
  xjustify right
  yjustify bottom
  Transform 1
  box {{parent.burnIn_padding} {parent.burnIn_padding} {width-parent.burnIn_padding} {"height - parent.burnIn_padding"}}
  center {960 540}
  color {{parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour} {parent.burnIn_colour}}
  name Text_BottomRight
  xpos -178
  ypos 300
 }
 Output {
  name Output1
  xpos -178
  ypos 400
 }
end_group
